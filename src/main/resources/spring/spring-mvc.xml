<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!--
< mvc:annotation-driven/>
< mvc:annotation-driven/>从 标签的shecma就能看出来，mvc，主要就是为了Spring MVC来用的，提供Controller请求转发，json自动转换等功能。相比上面的两个shecma是context开头，那么主要是解决spring**容器**的一些注解。

< mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。
并提供了：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。

在实际开发使用SpringMVC开启这个配置，否则会出现一些功能不能正常使用！

如：@Restcontroller无效, 依然去解析视图 ！-->

<!--    打开SpringMVC注解-->
    <mvc:annotation-driven></mvc:annotation-driven>

<!--    配置一下静态资源目录-->
<!--    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>-->



<!--    配置一个动态视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>

    </bean>

<!--    拦截器功能-->
<!--    <interceptors>-->
<!--        <interceptor>-->
<!--            <mapping path="/goods/**"/>&lt;!&ndash; 拦截器的url映射&ndash;&gt;-->
<!--&lt;!&ndash;           创建一个拦截器 &ndash;&gt;-->
<!--            <beans:bean id="LoginInterceptor" class="com.cuit.interceptor.LoginInterceptor"></beans:bean>-->
<!--        </interceptor>-->
<!--    </interceptors>-->
</beans>

